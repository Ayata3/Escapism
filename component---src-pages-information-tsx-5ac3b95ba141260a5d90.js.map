{"version":3,"file":"component---src-pages-information-tsx-5ac3b95ba141260a5d90.js","mappings":"uHAMA,IAJkCA,IAAmB,IAAlB,SAAEC,GAAU,EAC7C,OAAOC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cAAcF,EAAe,C,qCCUrD,IAXkC,IAE9BC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,6BACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,0FAAwF,eAGtGD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,6B,qCCarB,IAbyCC,GAErCF,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,QACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAS,YAAcC,EAAMD,WAC9BC,EAAMC,aAETH,EAAAA,cAAAA,IAAAA,CAAGC,UAAS,qBAAuBC,EAAMD,WAAY,KAChDC,EAAME,gB,6ECqCjB,IA1CgDN,IAGzC,IAH0C,MAC/CO,EAAK,SACLN,GACD,EACC,OACEC,EAAAA,cAACM,EAAAA,EAAS,CAACL,UAAW,YACpBD,EAAAA,cAACO,EAAAA,EAAO,CACNJ,YAAa,cACbC,eAAgB,YAChBH,UAAW,oBAEZI,EAAMG,KAAKC,GAERT,EAAAA,cAAAA,MAAAA,CACEC,UAAU,qBACVS,IAAKD,EAAKE,KAAKC,OAAOC,MAEtBb,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,QACbD,EAAAA,cAACc,EAAAA,KAAI,CACHC,GAAE,eAAiBN,EAAKE,KAAKC,OAAOC,MAEpCb,EAAAA,cAACgB,EAAAA,EAAe,KACdhB,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,4CACVQ,EAAKE,KAAKM,YAAYC,OAEzBlB,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,WACVQ,EAAKE,KAAKQ,SAEbnB,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,2BACVQ,EAAKE,KAAKM,YAAYG,YAQpCrB,EACS,C,oICjBhB,MAnBgED,IAEzD,IAF0D,MAC/DO,GACD,EACC,OACEL,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uCACbD,EAAAA,cAACqB,EAAAA,EAAQ,CACPH,MAAO,cACPI,YACE,8BAGJtB,EAAAA,cAACuB,EAAAA,EAAM,MACPvB,EAAAA,cAACwB,EAAAA,EAAe,MAChBxB,EAAAA,cAACyB,EAAAA,EAAW,CAACpB,MAAOA,IACpBL,EAAAA,cAAC0B,EAAAA,EAAM,MACH,E,UClBV,MALkC,KAChC,MAAMrB,GAAQsB,EAAAA,EAAAA,KACd,OAAO3B,EAAAA,cAAC4B,EAAmB,CAACvB,MAAOA,EAAMwB,OAAS,C,qECJ7C,MAAMF,EAAc,KACzB,MAAM,kBAAEG,IAAsBC,EAAAA,EAAAA,gBAAe,aAsB7C,OAAOD,CAAiB,C","sources":["webpack://escapism/./src/components/atoms/BottomBorderBox.tsx","webpack://escapism/./src/components/atoms/InformationHero.tsx","webpack://escapism/./src/components/atoms/Section.tsx","webpack://escapism/./src/components/organisms/Infomation.tsx","webpack://escapism/./src/components/templates/InformationTemplate.tsx","webpack://escapism/./src/pages/information.tsx","webpack://escapism/./src/queries/posts/search.tsx"],"sourcesContent":["import React from 'react'\n\nconst BottomBorderBox: React.FC = ({ children }) => {\n  return <div className=\"border-b-2\">{children}</div>\n}\n\nexport default BottomBorderBox\n","import React from 'react'\n\nconst InformationHero: React.FC = () => {\n  return (\n    <div className=\"bg-gray-400 relative flex\">\n      <h1 className=\"absolute w-full self-center text-center sm:text-xl md:text-3xl lg:text-5xl xl:text-5xl\">\n        Information\n      </h1>\n      <img className=\"object-cover h-32 w-full\" />\n    </div>\n  )\n}\n\nexport default InformationHero\n","import React from 'react'\n\ninterface SectionProps {\n  sectionName: string\n  sectionSubName: string\n  className: string\n}\n\nconst Section: React.FC<SectionProps> = (props) => {\n  return (\n    <div className=\"flex\">\n      <h2 className={`text-3xl ${props.className}`}>\n        {props.sectionName}\n      </h2>\n      <p className={`text-xs ml-2 pt-5 ${props.className}`}>\n        / {props.sectionSubName}\n      </p>\n    </div>\n  )\n}\n\nexport default Section\n","import React from 'react'\nimport Section from '../atoms/Section'\nimport Container from '../atoms/Container'\nimport BottomBorderBox from '../atoms/BottomBorderBox'\nimport { Link } from 'gatsby'\n\ninterface InformationProps {\n  posts: any\n}\n\nconst Information: React.FC<InformationProps> = ({\n  posts,\n  children,\n}) => {\n  return (\n    <Container className={'bg-white'}>\n      <Section\n        sectionName={'Information'}\n        sectionSubName={'インフォメーション'}\n        className={'text-orange-400'}\n      />\n      {posts.map((post: any) => {\n        return (\n          <div\n            className=\"text-gray-900 mx-8\"\n            key={post.node.fields.slug}\n          >\n            <div className=\"my-4\">\n              <Link\n                to={`/information${post.node.fields.slug}`}\n              >\n                <BottomBorderBox>\n                  <p className=\"lg:text-lg xl:text-lg font-semibold mb-2\">\n                    {post.node.frontmatter.title}\n                  </p>\n                  <p className=\"text-sm\">\n                    {post.node.excerpt}\n                  </p>\n                  <p className=\"text-sm text-right my-1\">\n                    {post.node.frontmatter.date}\n                  </p>\n                </BottomBorderBox>\n              </Link>\n            </div>\n          </div>\n        )\n      })}\n      {children}\n    </Container>\n  )\n}\n\nexport default Information\n","import React from 'react'\n\nimport Header from '../atoms/Header'\nimport Footer from '../atoms/Footer'\nimport InformationHero from '../atoms/InformationHero'\nimport Information from '../organisms/Infomation'\nimport Metadata from '../atoms/Metadata'\n\ninterface InformationTemplateProps {\n  posts: any\n}\n\nconst InformationTemplate: React.FC<InformationTemplateProps> = ({\n  posts,\n}) => {\n  return (\n    <div className=\"flex flex-col min-h-screen bg-white\">\n      <Metadata\n        title={'Information'}\n        description={\n          'サークル「現実逃避跡地」のインフォメーションです。'\n        }\n      />\n      <Header />\n      <InformationHero />\n      <Information posts={posts} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default InformationTemplate\n","import React from 'react'\nimport InformationTemplate from '../components/templates/InformationTemplate'\nimport { FETCH_POSTS } from '../queries/posts'\n\nconst InformationPage: React.FC = () => {\n  const posts = FETCH_POSTS()\n  return <InformationTemplate posts={posts.edges} />\n}\n\nexport default InformationPage\n","import { graphql, useStaticQuery } from 'gatsby'\n\nexport const FETCH_POSTS = (): any => {\n  const { allMarkdownRemark } = useStaticQuery(graphql`\n    query FetchPosts {\n      allMarkdownRemark(\n        sort: { frontmatter: { date: DESC } }\n      ) {\n        totalCount\n        edges {\n          node {\n            id\n            excerpt(pruneLength: 40)\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"YYYY/MM/DD\")\n              title\n            }\n          }\n        }\n      }\n    }\n  `)\n  return allMarkdownRemark\n}\n"],"names":["_ref","children","React","className","props","sectionName","sectionSubName","posts","Container","Section","map","post","key","node","fields","slug","Link","to","BottomBorderBox","frontmatter","title","excerpt","date","Metadata","description","Header","InformationHero","Information","Footer","FETCH_POSTS","InformationTemplate","edges","allMarkdownRemark","useStaticQuery"],"sourceRoot":""}