{"version":3,"sources":["webpack:///./src/components/organisms/Post.tsx","webpack:///./src/components/organisms/Pagination.tsx","webpack:///./src/components/templates/PostTemplate.tsx","webpack:///./src/components/atoms/InformationHero.tsx"],"names":["Post","post","Container","className","dateTime","frontmatter","date","title","dangerouslySetInnerHTML","__html","html","Pagination","previous","next","PreviousButton","to","fields","slug","excerpt","NextButton","fetchPost","PostTemplate","data","pageContext","markdownRemark","Metadata","description","Header","InformationHero","Footer"],"mappings":"qNA4BeA,EArBmB,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACnC,OACE,kBAACC,EAAA,EAAD,CAAWC,UAAW,YACpB,6BACE,0BAAMC,SAAUH,EAAKI,YAAYC,MAC9BL,EAAKI,YAAYC,OAGtB,yBAAKH,UAAU,QACb,wBAAIA,UAAU,4BACXF,EAAKI,YAAYE,QAGtB,6BACEJ,UAAU,OACVK,wBAAyB,CAAEC,OAAQR,EAAKS,U,YCqCjCC,EAlD+B,SAAC,GAGzC,IAFJC,EAEI,EAFJA,SACAC,EACI,EADJA,KAEMC,EAAiBF,EACrB,kBAAC,OAAD,CAAMG,GAAE,eAAiBH,EAASI,OAAOC,MACvC,yBAAKd,UAAU,sBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,4CACZS,EAASP,YAAYE,OAExB,uBAAGJ,UAAU,WAAWS,EAASM,SACjC,uBAAGf,UAAU,2BACVS,EAASP,YAAYC,SAK5B,KAEEa,EAAaN,EACjB,kBAAC,OAAD,CAAME,GAAE,eAAiBF,EAAKG,OAAOC,MACnC,yBAAKd,UAAU,sBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,4CACZU,EAAKR,YAAYE,OAEpB,uBAAGJ,UAAU,WAAWU,EAAKK,SAC7B,uBAAGf,UAAU,2BACVU,EAAKR,YAAYC,SAKxB,KAEJ,OACE,kBAACJ,EAAA,EAAD,CAAWC,UAAW,YACpB,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,yDACZW,GAEH,yBAAKX,UAAU,yDACZgB,M,YCZEC,GAHEC,UAtBmC,SAAC,GAG7C,IAFJC,EAEI,EAFJA,KACAC,EACI,EADJA,YAEMtB,EAAOqB,EAAKE,eACVZ,EAAmBW,EAAnBX,SAAUC,EAASU,EAATV,KAElB,OACE,yBAAKV,UAAU,uCACb,kBAACsB,EAAA,EAAD,CACElB,MAAON,EAAKI,YAAYE,MACxBmB,YAAazB,EAAKiB,UAEpB,kBAACS,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,CAAM3B,KAAMA,IACZ,kBAAC,EAAD,CAAYW,SAAUA,EAAUC,KAAMA,IACtC,kBAACgB,EAAA,EAAD,QAQmB,e,kCCxCzB,yBAaeD,IAXmB,WAChC,OACE,yBAAKzB,UAAU,6BACb,wBAAIA,UAAU,0FAAd,eAGA,yBAAKA,UAAU","file":"component---src-components-templates-post-template-tsx-52ddd797cd3a2e1f069b.js","sourcesContent":["import React from 'react'\nimport Container from '../atoms/Container'\n\ninterface PostProps {\n  post: any\n}\n\nconst Post: React.FC<PostProps> = ({ post }) => {\n  return (\n    <Container className={'bg-white'}>\n      <div>\n        <time dateTime={post.frontmatter.date}>\n          {post.frontmatter.date}\n        </time>\n      </div>\n      <div className=\"mb-4\">\n        <h1 className=\"text-3xl text-orange-400\">\n          {post.frontmatter.title}\n        </h1>\n      </div>\n      <section\n        className=\"post\"\n        dangerouslySetInnerHTML={{ __html: post.html }}\n      />\n    </Container>\n  )\n}\n\nexport default Post\n","import React from 'react'\nimport Container from '../atoms/Container'\nimport { Link } from 'gatsby'\n\ninterface PaginationProps {\n  previous: any\n  next: any\n}\n\nconst Pagination: React.FC<PaginationProps> = ({\n  previous,\n  next,\n}) => {\n  const PreviousButton = previous ? (\n    <Link to={`/information${previous.fields.slug}`}>\n      <div className=\"text-gray-900 mx-8\">\n        <div className=\"my-4\">\n          <div className=\"lg:text-lg xl:text-lg font-semibold mb-2\">\n            {previous.frontmatter.title}\n          </div>\n          <p className=\"text-sm\">{previous.excerpt}</p>\n          <p className=\"text-sm text-right my-1\">\n            {previous.frontmatter.date}\n          </p>\n        </div>\n      </div>\n    </Link>\n  ) : null\n\n  const NextButton = next ? (\n    <Link to={`/information${next.fields.slug}`}>\n      <div className=\"text-gray-900 mx-8\">\n        <div className=\"my-4\">\n          <div className=\"lg:text-lg xl:text-lg font-semibold mb-2\">\n            {next.frontmatter.title}\n          </div>\n          <p className=\"text-sm\">{next.excerpt}</p>\n          <p className=\"text-sm text-right my-1\">\n            {next.frontmatter.date}\n          </p>\n        </div>\n      </div>\n    </Link>\n  ) : null\n\n  return (\n    <Container className={'bg-white'}>\n      <div className=\"grid grid-flow-row grid-cols-2 gap-0\">\n        <div className=\"col-span-1 border-t border-b border-r border-gray-900\">\n          {PreviousButton}\n        </div>\n        <div className=\"col-span-1 border-t border-b border-l border-gray-900\">\n          {NextButton}\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Header from '../atoms/Header'\nimport Footer from '../atoms/Footer'\nimport InformationHero from '../atoms/InformationHero'\nimport Post from '../organisms/Post'\nimport Pagination from '../organisms/Pagination'\nimport Metadata from '../atoms/Metadata'\n\ninterface PostTemplateProps {\n  data: any\n  pageContext: any\n}\n\nconst PostTemplate: React.FC<PostTemplateProps> = ({\n  data,\n  pageContext,\n}) => {\n  const post = data.markdownRemark\n  const { previous, next } = pageContext\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-white\">\n      <Metadata\n        title={post.frontmatter.title}\n        description={post.excerpt}\n      />\n      <Header />\n      <InformationHero />\n      <Post post={post} />\n      <Pagination previous={previous} next={next} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default PostTemplate\n\n// TODO: queriesに移動できるようにする\nexport const fetchPost = graphql`\n  query FetchPost($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 40)\n      html\n      frontmatter {\n        date(formatString: \"YYYY/MM/DD\")\n        title\n      }\n    }\n  }\n`\n","import React from 'react'\n\nconst InformationHero: React.FC = () => {\n  return (\n    <div className=\"bg-gray-400 relative flex\">\n      <h1 className=\"absolute w-full self-center text-center sm:text-xl md:text-3xl lg:text-5xl xl:text-5xl\">\n        Information\n      </h1>\n      <img className=\"object-cover h-32 w-full\" />\n    </div>\n  )\n}\n\nexport default InformationHero\n"],"sourceRoot":""}