{"version":3,"sources":["webpack:///./src/components/organisms/Infomation.tsx","webpack:///./src/components/templates/InformationTemplate.tsx","webpack:///./src/pages/information.tsx","webpack:///./src/queries/posts/search.tsx","webpack:///./src/components/atoms/Header.tsx","webpack:///./src/components/atoms/Section.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/atoms/InformationHero.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/atoms/BottomBorderBox.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Container.tsx","webpack:///./src/components/atoms/Footer.tsx"],"names":["Information","posts","children","className","sectionName","sectionSubName","map","post","key","node","fields","slug","to","frontmatter","title","excerpt","date","InformationTemplate","Header","InformationHero","Footer","InformationPage","FETCH_POSTS","edges","allMarkdownRemark","Section","props","loader","enqueue","React","createContext","m","module","exports","require","default","BottomBorderBox","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","Container"],"mappings":"2FAAA,yEAoDeA,IA1CiC,SAAC,GAG3C,IAFJC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEA,OACE,kBAAC,IAAD,CAAWC,UAAW,YACpB,kBAAC,IAAD,CACEC,YAAa,cACbC,eAAgB,YAChBF,UAAW,oBAEZF,EAAMK,KAAI,SAACC,GACV,OACE,yBACEJ,UAAU,qBACVK,IAAKD,EAAKE,KAAKC,OAAOC,MAEtB,yBAAKR,UAAU,QACb,kBAAC,IAAD,CACES,GAAE,cAAgBL,EAAKE,KAAKC,OAAOC,MAEnC,kBAAC,IAAD,KACE,uBAAGR,UAAU,4CACVI,EAAKE,KAAKI,YAAYC,OAEzB,uBAAGX,UAAU,WACVI,EAAKE,KAAKM,SAEb,uBAAGZ,UAAU,2BACVI,EAAKE,KAAKI,YAAYG,aAQpCd,K,kHCvBQe,EAbiD,SAAC,GAE3D,IADJhB,EACI,EADJA,MAEA,OACE,yBAAKE,UAAU,uCACb,kBAACe,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,MACA,kBAAC,IAAD,CAAalB,MAAOA,IACpB,kBAACmB,EAAA,EAAD,Q,YCVSC,UALmB,WAChC,IAAMpB,EAAQqB,cACd,OAAO,kBAAC,EAAD,CAAqBrB,MAAOA,EAAMsB,U,o1ECJ9BD,EAAc,WAuBzB,OAvBoC,OAC5BE,oB,kCCHV,qCAkBeN,IAfU,WACvB,OACE,yBAAKf,UAAU,OACb,kBAAC,IAAD,CAAMS,GAAI,KACR,yBAAKT,UAAU,uBACb,uBAAGA,UAAU,YAAb,YACA,uBAAGA,UAAU,qBAAb,iB,kCCTV,yBAqBesB,IAbyB,SAAAC,GACtC,OACE,yBAAKvB,UAAU,QACb,wBAAIA,UAAS,YAAcuB,EAAMvB,WAC9BuB,EAAMtB,aAET,uBAAGD,UAAS,qBAAuBuB,EAAMvB,WAAzC,KACKuB,EAAMrB,mB,kCCfjB,sGAcyBsB,QAAOC,QAELC,IAAMC,cAAc,K,kCChB/C,yBAaeX,IAXmB,WAChC,OACE,yBAAKhB,UAAU,6BACb,wBAAIA,UAAU,0FAAd,cAGA,yBAAKA,UAAU,gC,qBCRrB,IAAsB4B,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,kCCA/C,yBAMeK,IAJmB,SAAC,GAAiB,IAAflC,EAAe,EAAfA,SACnC,OAAO,yBAAKC,UAAU,cAAcD,K,wFCmBvBmC,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEV,IAAMW,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,kCCPX,yBAkBeC,IAZ6B,SAAAjB,GAC1C,OACE,yBACEvB,UAAS,wCAA0CuB,EAAMvB,WAEzD,yBAAKA,UAAU,sCACZuB,EAAMxB,a,kCCZf,yBAYekB,IAVU,WACvB,OACE,4BAAQjB,UAAU,2BAChB,uBAAGA,UAAU,kCAAb","file":"component---src-pages-information-tsx-3522827326917992ea14.js","sourcesContent":["import React from 'react'\nimport Section from '../atoms/Section'\nimport Container from '../atoms/Container'\nimport BottomBorderBox from '../atoms/BottomBorderBox'\nimport { Link } from 'gatsby'\n\ninterface InformationProps {\n  posts: any\n}\n\nconst Information: React.FC<InformationProps> = ({\n  posts,\n  children,\n}) => {\n  return (\n    <Container className={'bg-white'}>\n      <Section\n        sectionName={'Information'}\n        sectionSubName={'インフォメーション'}\n        className={'text-orange-400'}\n      />\n      {posts.map((post: any) => {\n        return (\n          <div\n            className=\"text-gray-900 mx-8\"\n            key={post.node.fields.slug}\n          >\n            <div className=\"my-4\">\n              <Link\n                to={`information${post.node.fields.slug}`}\n              >\n                <BottomBorderBox>\n                  <p className=\"lg:text-lg xl:text-lg font-semibold mb-2\">\n                    {post.node.frontmatter.title}\n                  </p>\n                  <p className=\"text-sm\">\n                    {post.node.excerpt}\n                  </p>\n                  <p className=\"text-sm text-right my-1\">\n                    {post.node.frontmatter.date}\n                  </p>\n                </BottomBorderBox>\n              </Link>\n            </div>\n          </div>\n        )\n      })}\n      {children}\n    </Container>\n  )\n}\n\nexport default Information\n","import React from 'react'\n\nimport Header from '../atoms/Header'\nimport Footer from '../atoms/Footer'\nimport InformationHero from '../atoms/InformationHero'\nimport Information from '../organisms/Infomation'\n\ninterface InformationTemplateProps {\n  posts: any\n}\n\nconst InformationTemplate: React.FC<InformationTemplateProps> = ({\n  posts,\n}) => {\n  return (\n    <div className=\"flex flex-col min-h-screen bg-white\">\n      <Header />\n      <InformationHero />\n      <Information posts={posts} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default InformationTemplate\n","import React from 'react'\nimport InformationTemplate from '../components/templates/InformationTemplate'\nimport { FETCH_POSTS } from '../queries/posts'\n\nconst InformationPage: React.FC = () => {\n  const posts = FETCH_POSTS()\n  return <InformationTemplate posts={posts.edges} />\n}\n\nexport default InformationPage\n","import { graphql, useStaticQuery } from 'gatsby'\n\nexport const FETCH_POSTS = (): any => {\n  const { allMarkdownRemark } = useStaticQuery(graphql`\n    query FetchPosts {\n      allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] }\n      ) {\n        totalCount\n        edges {\n          node {\n            id\n            excerpt(pruneLength: 40)\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"YYYY/MM/DD\")\n              title\n            }\n          }\n        }\n      }\n    }\n  `)\n  return allMarkdownRemark\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header: React.FC = () => {\n  return (\n    <nav className=\"p-2\">\n      <Link to={'/'}>\n        <div className=\"flex justify-center\">\n          <p className=\"text-3xl\">Escapism</p>\n          <p className=\"text-xs ml-2 pt-5\">\n            / 現実逃避跡地\n          </p>\n        </div>\n      </Link>\n    </nav>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\ninterface SectionProps {\n  sectionName: string\n  sectionSubName: string\n  className: string\n}\n\nconst Section: React.FC<SectionProps> = props => {\n  return (\n    <div className=\"flex\">\n      <h2 className={`text-3xl ${props.className}`}>\n        {props.sectionName}\n      </h2>\n      <p className={`text-xs ml-2 pt-5 ${props.className}`}>\n        / {props.sectionSubName}\n      </p>\n    </div>\n  )\n}\n\nexport default Section\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react'\n\nconst InformationHero: React.FC = () => {\n  return (\n    <div className=\"bg-gray-400 relative flex\">\n      <h1 className=\"absolute w-full self-center text-center sm:text-xl md:text-3xl lg:text-5xl xl:text-5xl\">\n        Informtion\n      </h1>\n      <img className=\"object-cover h-32 w-full\" />\n    </div>\n  )\n}\n\nexport default InformationHero\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\n\nconst BottomBorderBox: React.FC = ({ children }) => {\n  return <div className=\"border-b-2\">{children}</div>\n}\n\nexport default BottomBorderBox\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\ninterface ContainerProps {\n  className: string\n}\n\nconst Container: React.FC<ContainerProps> = props => {\n  return (\n    <div\n      className={`py-8 px-6 md:px-32 lg:px-48 xl:px-64 ${props.className}`}\n    >\n      <div className=\"container mx-auto lg:px-8 xl:px-24\">\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\nexport default Container\n","import React from 'react'\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"mt-auto bg-gray-900 p-2\">\n      <p className=\"text-center text-sm text-white\">\n        © 2017 Escapism\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer\n"],"sourceRoot":""}