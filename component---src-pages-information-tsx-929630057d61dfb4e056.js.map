{"version":3,"file":"component---src-pages-information-tsx-929630057d61dfb4e056.js","mappings":"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","sources":["webpack://escapism/./src/components/atoms/BottomBorderBox.tsx","webpack://escapism/./src/components/atoms/Container.tsx","webpack://escapism/./src/components/atoms/Footer.tsx","webpack://escapism/./src/components/atoms/Header.tsx","webpack://escapism/./src/components/atoms/InformationHero.tsx","webpack://escapism/./src/components/atoms/Metadata.tsx","webpack://escapism/./src/queries/site/search.tsx","webpack://escapism/./src/components/atoms/Section.tsx","webpack://escapism/./src/components/organisms/Infomation.tsx","webpack://escapism/./src/components/templates/InformationTemplate.tsx","webpack://escapism/./src/pages/information.tsx","webpack://escapism/./src/queries/posts/search.tsx"],"sourcesContent":["import React from 'react'\n\nconst BottomBorderBox: React.FC = ({ children }) => {\n  return <div className=\"border-b-2\">{children}</div>\n}\n\nexport default BottomBorderBox\n","import React from 'react'\n\ninterface ContainerProps {\n  className: string\n}\n\nconst Container: React.FC<ContainerProps> = (props) => {\n  return (\n    <div\n      className={`py-8 px-6 md:px-32 lg:px-48 xl:px-64 ${props.className}`}\n    >\n      <div className=\"container mx-auto lg:px-8 xl:px-24\">\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\nexport default Container\n","import React from 'react'\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"mt-auto bg-gray-900 p-2\">\n      <p className=\"text-center text-sm text-white\">\n        © 2017 Escapism\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header: React.FC = () => {\n  return (\n    <nav className=\"p-2\">\n      <Link to={'/'}>\n        <div className=\"flex justify-center\">\n          <p className=\"text-3xl\">Escapism</p>\n          <p className=\"text-xs ml-2 pt-5\">\n            / 現実逃避跡地\n          </p>\n        </div>\n      </Link>\n    </nav>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst InformationHero: React.FC = () => {\n  return (\n    <div className=\"bg-gray-400 relative flex\">\n      <h1 className=\"absolute w-full self-center text-center sm:text-xl md:text-3xl lg:text-5xl xl:text-5xl\">\n        Information\n      </h1>\n      <img className=\"object-cover h-32 w-full\" />\n    </div>\n  )\n}\n\nexport default InformationHero\n","import React from 'react'\nimport { FETCH_SITE } from '../../queries/site'\n\ninterface MetadataProps {\n  title: string | undefined\n  description: string | undefined\n}\n\nconst Metadata: React.FC<MetadataProps> = ({\n  title,\n  description,\n}) => {\n  const site = FETCH_SITE()\n\n  return (\n    <>\n      <title>\n        {title + ' | ' + site.siteMetadata.title}\n      </title>\n      <meta\n        name=\"description\"\n        content={\n          description || site.siteMetadata.description\n        }\n      />\n      <meta\n        name=\"og:title\"\n        content={title || site.siteMetadata.title}\n      />\n      <meta\n        name=\"og:description\"\n        content={\n          description || site.siteMetadata.description\n        }\n      />\n      <meta name=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata.social.twitter}\n      />\n      <meta\n        name=\"twitter:title\"\n        content={title || site.siteMetadata.title}\n      />\n      <meta\n        name=\"twitter:description\"\n        content={\n          description || site.siteMetadata.description\n        }\n      />\n      <meta\n        name=\"google-site-verification\"\n        content=\"Wj-rsWIHA_2EegrJ7sDJAdyhoD2mAR4wk68w1_NPwZA\"\n      />\n    </>\n  )\n}\n\nexport default Metadata\n","import { graphql, useStaticQuery } from 'gatsby'\n\nexport const FETCH_SITE = (): any => {\n  const { site } = useStaticQuery(graphql`\n    query FetchSite {\n      site {\n        siteMetadata {\n          title\n          description\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n  return site\n}\n","import React from 'react'\n\ninterface SectionProps {\n  sectionName: string\n  sectionSubName: string\n  className: string\n}\n\nconst Section: React.FC<SectionProps> = (props) => {\n  return (\n    <div className=\"flex\">\n      <h2 className={`text-3xl ${props.className}`}>\n        {props.sectionName}\n      </h2>\n      <p className={`text-xs ml-2 pt-5 ${props.className}`}>\n        / {props.sectionSubName}\n      </p>\n    </div>\n  )\n}\n\nexport default Section\n","import React from 'react'\nimport Section from '../atoms/Section'\nimport Container from '../atoms/Container'\nimport BottomBorderBox from '../atoms/BottomBorderBox'\nimport { Link } from 'gatsby'\n\ninterface InformationProps {\n  posts: any\n}\n\nconst Information: React.FC<InformationProps> = ({\n  posts,\n  children,\n}) => {\n  return (\n    <Container className={'bg-white'}>\n      <Section\n        sectionName={'Information'}\n        sectionSubName={'インフォメーション'}\n        className={'text-orange-400'}\n      />\n      {posts.map((post: any) => {\n        return (\n          <div\n            className=\"text-gray-900 mx-8\"\n            key={post.node.fields.slug}\n          >\n            <div className=\"my-4\">\n              <Link\n                to={`/information${post.node.fields.slug}`}\n              >\n                <BottomBorderBox>\n                  <p className=\"lg:text-lg xl:text-lg font-semibold mb-2\">\n                    {post.node.frontmatter.title}\n                  </p>\n                  <p className=\"text-sm\">\n                    {post.node.excerpt}\n                  </p>\n                  <p className=\"text-sm text-right my-1\">\n                    {post.node.frontmatter.date}\n                  </p>\n                </BottomBorderBox>\n              </Link>\n            </div>\n          </div>\n        )\n      })}\n      {children}\n    </Container>\n  )\n}\n\nexport default Information\n","import React from 'react'\n\nimport Header from '../atoms/Header'\nimport Footer from '../atoms/Footer'\nimport InformationHero from '../atoms/InformationHero'\nimport Information from '../organisms/Infomation'\n\ninterface InformationTemplateProps {\n  posts: any\n}\n\nconst InformationTemplate: React.FC<\n  InformationTemplateProps\n> = ({ posts }) => {\n  return (\n    <div className=\"flex flex-col min-h-screen bg-white\">\n      <Header />\n      <InformationHero />\n      <Information posts={posts} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default InformationTemplate\n","import React from 'react'\nimport InformationTemplate from '../components/templates/InformationTemplate'\nimport { FETCH_POSTS } from '../queries/posts'\nimport Metadata from '../components/atoms/Metadata'\nimport { HeadFC } from 'gatsby'\n\nconst InformationPage: React.FC = () => {\n  const posts = FETCH_POSTS()\n  return <InformationTemplate posts={posts.edges} />\n}\n\nexport default InformationPage\n\nexport const Head: HeadFC = () => (\n  <Metadata\n    title={'Information'}\n    description={\n      'サークル「現実逃避跡地」のインフォメーションです。'\n    }\n  />\n)\n","import { graphql, useStaticQuery } from 'gatsby'\n\nexport const FETCH_POSTS = (): any => {\n  const { allMarkdownRemark } = useStaticQuery(graphql`\n    query FetchPosts {\n      allMarkdownRemark(\n        sort: { frontmatter: { date: DESC } }\n      ) {\n        totalCount\n        edges {\n          node {\n            id\n            excerpt(pruneLength: 40, truncate: true)\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"YYYY/MM/DD\")\n              title\n            }\n          }\n        }\n      }\n    }\n  `)\n  return allMarkdownRemark\n}\n"],"names":["_ref","children","React","className","props","Footer","Header","Link","to","InformationHero","title","description","site","FETCH_SITE","useStaticQuery","siteMetadata","name","content","social","twitter","sectionName","sectionSubName","posts","Container","Section","map","post","key","node","fields","slug","BottomBorderBox","frontmatter","excerpt","date","Information","InformationPage","FETCH_POSTS","InformationTemplate","edges","Head","Metadata","allMarkdownRemark"],"sourceRoot":""}