{"version":3,"file":"component---src-components-templates-post-template-tsx-c7adf3e6112a65df0a57.js","mappings":"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","sources":["webpack://escapism/./src/components/atoms/Container.tsx","webpack://escapism/./src/components/atoms/Footer.tsx","webpack://escapism/./src/components/atoms/Header.tsx","webpack://escapism/./src/components/atoms/InformationHero.tsx","webpack://escapism/./src/components/atoms/Metadata.tsx","webpack://escapism/./src/queries/site/search.tsx","webpack://escapism/./src/components/organisms/Post.tsx","webpack://escapism/./src/components/organisms/Pagination.tsx","webpack://escapism/./src/components/templates/PostTemplate.tsx"],"sourcesContent":["import React from 'react'\n\ninterface ContainerProps {\n  className: string\n}\n\nconst Container: React.FC<ContainerProps> = (props) => {\n  return (\n    <div\n      className={`py-8 px-6 md:px-32 lg:px-48 xl:px-64 ${props.className}`}\n    >\n      <div className=\"container mx-auto lg:px-8 xl:px-24\">\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\nexport default Container\n","import React from 'react'\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"mt-auto bg-gray-900 p-2\">\n      <p className=\"text-center text-sm text-white\">\n        © 2017 Escapism\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header: React.FC = () => {\n  return (\n    <nav className=\"p-2\">\n      <Link to={'/'}>\n        <div className=\"flex justify-center\">\n          <p className=\"text-3xl\">Escapism</p>\n          <p className=\"text-xs ml-2 pt-5\">\n            / 現実逃避跡地\n          </p>\n        </div>\n      </Link>\n    </nav>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst InformationHero: React.FC = () => {\n  return (\n    <div className=\"bg-gray-400 relative flex\">\n      <h1 className=\"absolute w-full self-center text-center sm:text-xl md:text-3xl lg:text-5xl xl:text-5xl\">\n        Information\n      </h1>\n      <img className=\"object-cover h-32 w-full\" />\n    </div>\n  )\n}\n\nexport default InformationHero\n","import React from 'react'\nimport { FETCH_SITE } from '../../queries/site'\n\ninterface MetadataProps {\n  title: string | undefined\n  description: string | undefined\n}\n\nconst Metadata: React.FC<MetadataProps> = ({\n  title,\n  description,\n}) => {\n  const site = FETCH_SITE()\n\n  return (\n    <>\n      <title>\n        {title + ' | ' + site.siteMetadata.title}\n      </title>\n      <meta\n        name=\"description\"\n        content={\n          description || site.siteMetadata.description\n        }\n      />\n      <meta\n        name=\"og:title\"\n        content={title || site.siteMetadata.title}\n      />\n      <meta\n        name=\"og:description\"\n        content={\n          description || site.siteMetadata.description\n        }\n      />\n      <meta name=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata.social.twitter}\n      />\n      <meta\n        name=\"twitter:title\"\n        content={title || site.siteMetadata.title}\n      />\n      <meta\n        name=\"twitter:description\"\n        content={\n          description || site.siteMetadata.description\n        }\n      />\n      <meta\n        name=\"google-site-verification\"\n        content=\"Wj-rsWIHA_2EegrJ7sDJAdyhoD2mAR4wk68w1_NPwZA\"\n      />\n    </>\n  )\n}\n\nexport default Metadata\n","import { graphql, useStaticQuery } from 'gatsby'\n\nexport const FETCH_SITE = (): any => {\n  const { site } = useStaticQuery(graphql`\n    query FetchSite {\n      site {\n        siteMetadata {\n          title\n          description\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n  return site\n}\n","import React from 'react'\nimport Container from '../atoms/Container'\n\ninterface PostProps {\n  post: any\n}\n\nconst Post: React.FC<PostProps> = ({ post }) => {\n  return (\n    <Container className={'bg-white'}>\n      <div>\n        <time dateTime={post.frontmatter.date}>\n          {post.frontmatter.date}\n        </time>\n      </div>\n      <div className=\"mb-4\">\n        <h1 className=\"text-3xl text-orange-400\">\n          {post.frontmatter.title}\n        </h1>\n      </div>\n      <section\n        className=\"post\"\n        dangerouslySetInnerHTML={{ __html: post.html }}\n      />\n    </Container>\n  )\n}\n\nexport default Post\n","import React from 'react'\nimport Container from '../atoms/Container'\nimport { Link } from 'gatsby'\n\ninterface PaginationProps {\n  previous: any\n  next: any\n}\n\nconst Pagination: React.FC<PaginationProps> = ({\n  previous,\n  next,\n}) => {\n  const PreviousButton = previous ? (\n    <Link to={`/information${previous.fields.slug}`}>\n      <div className=\"text-gray-900 mx-8\">\n        <div className=\"my-4\">\n          <div className=\"lg:text-lg xl:text-lg font-semibold mb-2\">\n            {previous.frontmatter.title}\n          </div>\n          <p className=\"text-sm\">{previous.excerpt}</p>\n          <p className=\"text-sm text-right my-1\">\n            {previous.frontmatter.date}\n          </p>\n        </div>\n      </div>\n    </Link>\n  ) : null\n\n  const NextButton = next ? (\n    <Link to={`/information${next.fields.slug}`}>\n      <div className=\"text-gray-900 mx-8\">\n        <div className=\"my-4\">\n          <div className=\"lg:text-lg xl:text-lg font-semibold mb-2\">\n            {next.frontmatter.title}\n          </div>\n          <p className=\"text-sm\">{next.excerpt}</p>\n          <p className=\"text-sm text-right my-1\">\n            {next.frontmatter.date}\n          </p>\n        </div>\n      </div>\n    </Link>\n  ) : null\n\n  return (\n    <Container className={'bg-white'}>\n      <div className=\"grid grid-flow-row grid-cols-2 gap-0\">\n        <div className=\"col-span-1 border-t border-b border-r border-gray-900\">\n          {PreviousButton}\n        </div>\n        <div className=\"col-span-1 border-t border-b border-l border-gray-900\">\n          {NextButton}\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql, HeadFC } from 'gatsby'\n\nimport Header from '../atoms/Header'\nimport Footer from '../atoms/Footer'\nimport InformationHero from '../atoms/InformationHero'\nimport Post from '../organisms/Post'\nimport Pagination from '../organisms/Pagination'\nimport Metadata from '../atoms/Metadata'\n\ninterface PostTemplateProps {\n  data: any\n  pageContext: any\n}\n\nconst PostTemplate: React.FC<PostTemplateProps> = ({\n  data,\n  pageContext,\n}) => {\n  const post = data.markdownRemark\n  const { previous, next } = pageContext\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-white\">\n      <Header />\n      <InformationHero />\n      <Post post={post} />\n      <Pagination previous={previous} next={next} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default PostTemplate\n\nexport const Head: HeadFC<PostTemplateProps> = ({\n  data,\n  pageContext,\n}) => {\n  const post = data.markdownRemark\n\n  return (\n    <Metadata\n      title={post.frontmatter.title}\n      description={post.excerpt}\n    />\n  )\n}\n\n// TODO: queriesに移動できるようにする\nexport const fetchPost = graphql`\n  query FetchPost($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 40)\n      html\n      frontmatter {\n        date(formatString: \"YYYY/MM/DD\")\n        title\n      }\n    }\n  }\n`\n"],"names":["props","React","className","children","Link","to","_ref","title","description","site","useStaticQuery","FETCH_SITE","siteMetadata","name","content","social","twitter","post","Container","dateTime","frontmatter","date","dangerouslySetInnerHTML","__html","html","previous","next","PreviousButton","fields","slug","excerpt","NextButton","data","pageContext","markdownRemark","Header","InformationHero","Post","Pagination","Footer","Head","_ref2","Metadata"],"sourceRoot":""}