{"version":3,"sources":["webpack:///./src/components/organisms/Post.tsx","webpack:///./src/components/organisms/Pagination.tsx","webpack:///./src/components/templates/PostTemplate.tsx","webpack:///./src/components/atoms/Header.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/atoms/InformationHero.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Container.tsx","webpack:///./src/components/atoms/Footer.tsx"],"names":["Post","post","Container","className","dateTime","frontmatter","date","title","dangerouslySetInnerHTML","__html","html","Pagination","previous","next","PreviousButton","to","fields","slug","excerpt","NextButton","fetchPost","PostTemplate","data","pageContext","markdownRemark","Header","InformationHero","Footer","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","props","children"],"mappings":"qNA4BeA,EArBmB,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACnC,OACE,kBAACC,EAAA,EAAD,CAAWC,UAAW,YACpB,6BACE,0BAAMC,SAAUH,EAAKI,YAAYC,MAC9BL,EAAKI,YAAYC,OAGtB,yBAAKH,UAAU,QACb,wBAAIA,UAAU,4BACXF,EAAKI,YAAYE,QAGtB,6BACEJ,UAAU,OACVK,wBAAyB,CAAEC,OAAQR,EAAKS,U,YCqCjCC,EAlD+B,SAAC,GAGzC,IAFJC,EAEI,EAFJA,SACAC,EACI,EADJA,KAEMC,EAAiBF,EACrB,kBAAC,IAAD,CAAMG,GAAE,cAAgBH,EAASI,OAAOC,MACtC,yBAAKd,UAAU,sBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,4CACZS,EAASP,YAAYE,OAExB,uBAAGJ,UAAU,WAAWS,EAASM,SACjC,uBAAGf,UAAU,2BACVS,EAASP,YAAYC,SAK5B,KAEEa,EAAaN,EACjB,kBAAC,IAAD,CAAME,GAAE,cAAgBF,EAAKG,OAAOC,MAClC,yBAAKd,UAAU,sBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,4CACZU,EAAKR,YAAYE,OAEpB,uBAAGJ,UAAU,WAAWU,EAAKK,SAC7B,uBAAGf,UAAU,2BACVU,EAAKR,YAAYC,SAKxB,KAEJ,OACE,kBAACJ,EAAA,EAAD,CAAWC,UAAW,YACpB,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,yDACZW,GAEH,yBAAKX,UAAU,yDACZgB,MCjBEC,GAHEC,UAlBmC,SAAC,GAG7C,IAFJC,EAEI,EAFJA,KACAC,EACI,EADJA,YAEMtB,EAAOqB,EAAKE,eACVZ,EAAmBW,EAAnBX,SAAUC,EAASU,EAATV,KAElB,OACE,yBAAKV,UAAU,uCACb,kBAACsB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,CAAMzB,KAAMA,IACZ,kBAAC,EAAD,CAAYW,SAAUA,EAAUC,KAAMA,IACtC,kBAACc,EAAA,EAAD,QAQmB,c,kCCnCzB,qCAkBeF,IAfU,WACvB,OACE,yBAAKtB,UAAU,OACb,kBAAC,IAAD,CAAMY,GAAI,KACR,yBAAKZ,UAAU,uBACb,uBAAGA,UAAU,YAAb,YACA,uBAAGA,UAAU,qBAAb,iB,kCCTV,sGAcyByB,QAAOC,QAELC,IAAMC,cAAc,K,kCChB/C,yBAaeL,IAXmB,WAChC,OACE,yBAAKvB,UAAU,6BACb,wBAAIA,UAAU,0FAAd,cAGA,yBAAKA,UAAU,gC,qBCRrB,IAAsB6B,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGET,IAAMU,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,kCCPX,yBAkBexC,IAZ6B,SAAAyC,GAC1C,OACE,yBACExC,UAAS,wCAA0CwC,EAAMxC,WAEzD,yBAAKA,UAAU,sCACZwC,EAAMC,a,kCCZf,yBAYejB,IAVU,WACvB,OACE,4BAAQxB,UAAU,2BAChB,uBAAGA,UAAU,kCAAb","file":"component---src-components-templates-post-template-tsx-dd281de4ece28d178883.js","sourcesContent":["import React from 'react'\nimport Container from '../atoms/Container'\n\ninterface PostProps {\n  post: any\n}\n\nconst Post: React.FC<PostProps> = ({ post }) => {\n  return (\n    <Container className={'bg-white'}>\n      <div>\n        <time dateTime={post.frontmatter.date}>\n          {post.frontmatter.date}\n        </time>\n      </div>\n      <div className=\"mb-4\">\n        <h1 className=\"text-3xl text-orange-400\">\n          {post.frontmatter.title}\n        </h1>\n      </div>\n      <section\n        className=\"post\"\n        dangerouslySetInnerHTML={{ __html: post.html }}\n      />\n    </Container>\n  )\n}\n\nexport default Post\n","import React from 'react'\nimport Container from '../atoms/Container'\nimport { Link } from 'gatsby'\n\ninterface PaginationProps {\n  previous: any\n  next: any\n}\n\nconst Pagination: React.FC<PaginationProps> = ({\n  previous,\n  next,\n}) => {\n  const PreviousButton = previous ? (\n    <Link to={`information${previous.fields.slug}`}>\n      <div className=\"text-gray-900 mx-8\">\n        <div className=\"my-4\">\n          <div className=\"lg:text-lg xl:text-lg font-semibold mb-2\">\n            {previous.frontmatter.title}\n          </div>\n          <p className=\"text-sm\">{previous.excerpt}</p>\n          <p className=\"text-sm text-right my-1\">\n            {previous.frontmatter.date}\n          </p>\n        </div>\n      </div>\n    </Link>\n  ) : null\n\n  const NextButton = next ? (\n    <Link to={`information${next.fields.slug}`}>\n      <div className=\"text-gray-900 mx-8\">\n        <div className=\"my-4\">\n          <div className=\"lg:text-lg xl:text-lg font-semibold mb-2\">\n            {next.frontmatter.title}\n          </div>\n          <p className=\"text-sm\">{next.excerpt}</p>\n          <p className=\"text-sm text-right my-1\">\n            {next.frontmatter.date}\n          </p>\n        </div>\n      </div>\n    </Link>\n  ) : null\n\n  return (\n    <Container className={'bg-white'}>\n      <div className=\"grid grid-flow-row grid-cols-2 gap-0\">\n        <div className=\"col-span-1 border-t border-b border-r border-gray-900\">\n          {PreviousButton}\n        </div>\n        <div className=\"col-span-1 border-t border-b border-l border-gray-900\">\n          {NextButton}\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Header from '../atoms/Header'\nimport Footer from '../atoms/Footer'\nimport InformationHero from '../atoms/InformationHero'\nimport Post from '../organisms/Post'\nimport Pagination from '../organisms/Pagination'\n\ninterface PostTemplateProps {\n  data: any\n  pageContext: any\n}\n\nconst PostTemplate: React.FC<PostTemplateProps> = ({\n  data,\n  pageContext,\n}) => {\n  const post = data.markdownRemark\n  const { previous, next } = pageContext\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-white\">\n      <Header />\n      <InformationHero />\n      <Post post={post} />\n      <Pagination previous={previous} next={next} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default PostTemplate\n\n// TODO: queriesに移動できるようにする\nexport const fetchPost = graphql`\n  query FetchPost($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 40)\n      html\n      frontmatter {\n        date(formatString: \"YYYY/MM/DD\")\n        title\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header: React.FC = () => {\n  return (\n    <nav className=\"p-2\">\n      <Link to={'/'}>\n        <div className=\"flex justify-center\">\n          <p className=\"text-3xl\">Escapism</p>\n          <p className=\"text-xs ml-2 pt-5\">\n            / 現実逃避跡地\n          </p>\n        </div>\n      </Link>\n    </nav>\n  )\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react'\n\nconst InformationHero: React.FC = () => {\n  return (\n    <div className=\"bg-gray-400 relative flex\">\n      <h1 className=\"absolute w-full self-center text-center sm:text-xl md:text-3xl lg:text-5xl xl:text-5xl\">\n        Informtion\n      </h1>\n      <img className=\"object-cover h-32 w-full\" />\n    </div>\n  )\n}\n\nexport default InformationHero\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\ninterface ContainerProps {\n  className: string\n}\n\nconst Container: React.FC<ContainerProps> = props => {\n  return (\n    <div\n      className={`py-8 px-6 md:px-32 lg:px-48 xl:px-64 ${props.className}`}\n    >\n      <div className=\"container mx-auto lg:px-8 xl:px-24\">\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\nexport default Container\n","import React from 'react'\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"mt-auto bg-gray-900 p-2\">\n      <p className=\"text-center text-sm text-white\">\n        © 2017 Escapism\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer\n"],"sourceRoot":""}